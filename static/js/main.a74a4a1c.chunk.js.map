{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["Movie","styled","div","Name","span","Cover","img","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","Type","Poster","imdbID","onClick","onMovieSelect","src","Container","CoverImage","MovieName","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","axios","get","API_KEY","then","response","data","alt","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","Header","AppName","Search","SearchIcon","Input","input","MovieList","App","searchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updatemovieList","fetchData","searchString","Axios","placeholder","value","onChange","event","clearTimeout","timeout","setTimeout","target","length","map","index","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a74a4a1c.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { API_KEY } from \"../App\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Movie = styled.div`\r\ndisplay:flex;\r\nflex-direction: column;\r\npadding: 10px;\r\nwidth:280px;\r\ncursor: pointer;\r\n`;\r\n\r\nconst Name = styled.span`\r\nfont-size: 18px;\r\nfont-weight: 600;\r\ncolor:black;\r\nmargin: 15px 0; \r\n`;\r\nconst Cover = styled.img`\r\nobject-fit: cover;\r\nheight:362;\r\n`;\r\nconst InfoColumn = styled.span`\r\ndisplay:flex;\r\nflex-direction:row;\r\njustify-content: space-between;\r\ncolor:black;\r\n`;\r\nconst MovieInfo = styled.span`\r\nfont-size:16px;\r\nfont-weight: 500;\r\ncolor:black;\r\ntext-transform: capitalize;\r\n`;\r\nconst MovieComponent = (props) => {\r\n    const { Title, Year, Type, Poster, imdbID } = props.movie;\r\n    return (\r\n        <Movie onClick={() => props.onMovieSelect(imdbID)}>\r\n            <Cover src={Poster} />\r\n            <Name>{Title}</Name>\r\n            <InfoColumn>\r\n                <MovieInfo> Year: {Year}</MovieInfo>\r\n                <MovieInfo> Type: {Type} </MovieInfo>\r\n\r\n            </InfoColumn>\r\n        </Movie>)\r\n}\r\n\r\nexport default MovieComponent","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { API_KEY } from \"../App\";\r\n\r\nconst Container = styled.div`\r\ndisplay:flex;\r\nflex-direction: row;\r\npadding: 20px 30px;\r\njustify-content: center;\r\nborder-bottom: 1px solid lightgray;\r\n`\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 350px;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n  overflow: hidden;\r\n  margin: 4px 0;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: lightgray;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst MovieInfoComponent = (props) => {\r\n    const [movieInfo, setMovieInfo] = useState();\r\n    const { selectedMovie } = props;\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`)\r\n            .then((response) => setMovieInfo(response.data));\r\n    }, [selectedMovie]);\r\n    return (\r\n        <Container>\r\n            {movieInfo ? (\r\n                <>\r\n                    <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\r\n                    <InfoColumn>\r\n                        <MovieName>\r\n                            {movieInfo?.Type}: <span>{movieInfo?.Title}</span>\r\n                        </MovieName>\r\n                        <MovieInfo>\r\n                            IMDB Rating: <span>{movieInfo?.imdbRating}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Year: <span>{movieInfo?.Year}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Language: <span>{movieInfo?.Language}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Rated: <span>{movieInfo?.Rated}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Released: <span>{movieInfo?.Released}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Runtime: <span>{movieInfo?.Runtime}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Genre: <span>{movieInfo?.Genre}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Director: <span>{movieInfo?.Director}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Actors: <span>{movieInfo?.Actors}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Plot: <span>{movieInfo?.Plot}</span>\r\n                        </MovieInfo>\r\n                    </InfoColumn>\r\n                    <Close onClick={() => props.onMovieSelect()}>close</Close>\r\n                </>\r\n            ) : (\r\n                \"Patientez un instant\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default MovieInfoComponent;","import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components'\nimport MovieComponent from './components/MovieComponent'\nimport MovieInfoComponent from './components/MovieInfoComponent'\nimport Axios from 'axios'\n\nexport const API_KEY = \"7872d860\"\nconst Container = styled.div`\n display: flex;\n flex-direction: column;\n `\nconst Header = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\nbackground-color : blue;\ncolor: white;\npadding: 15px;\nalign-items: center;\nfont-size: 22px;\nfont-weight: bold;\n`\n\nconst AppName = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\n`\n\nconst Search = styled.div`\ndisplay:flex;\nflex-direction: row;\npadding:10px;\nbackground-color:white;\nborder-radius: 7px;\nmargin-left: 30px;\nwidth: 50%;\nalign-items: center;\n`\n\nconst SearchIcon = styled.img`\nwidth:30px;\nheight:30px;\n`\n\nconst Input = styled.input`\nborder: none;\nfont-size: 16px;\nfont-weight: bold;\noutline: none;\ncolor: black;\nmargin-left: 10px;\n`;\n\nconst MovieList = styled.div`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\npadding: 20px;\njustify-content: space-evenly;\n`;\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState();\n  const [timeoutId, updateTimeoutId] = useState();\n  const [movieList, updatemovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\n    );\n    updatemovieList(response.data.Search)\n  }\n  const onTextChange = (event) => {\n    clearTimeout(timeoutId)\n    updateSearchQuery();\n    const timeout = setTimeout(() => fetchData(event.target.value), 500)\n    updateTimeoutId(timeout)\n  };\n  return (\n    <Container>\n      <Header>\n        <AppName>\n          Movies.fr\n        </AppName>\n        <Search>\n          <SearchIcon src='/search.png' />\n          <Input placeholder='Quel film recherchez vous ?'\n            value={searchQuery}\n            onChange={onTextChange} />\n        </Search>\n\n      </Header>\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} />}\n      <MovieList>\n        {movieList?.length ?\n          movieList.map((movie, index) => (\n            <MovieComponent\n              key={index}\n              movie={movie}\n              onMovieSelect={onMovieSelect}\n            />\n          ))\n          : \"Rechechez un film dans la barre de recherche\"}\n\n      </MovieList>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}